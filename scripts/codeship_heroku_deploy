#!/bin/bash

AFTER_DEPLOYMENT_WAIT_TIME=2

echo "STARTING DEPLOYMENT"

HEROKU_APP_NAME=$1

function error_message() {
  echo -e "DEPLOYMENT FAILED on line $1 of the deployment script"
}

trap 'error_message $LINENO' ERR

set -o pipefail
set -e

echo "CHECKING Access to Heroku application $HEROKU_APP_NAME"
codeship_heroku check_access $HEROKU_APP_NAME

ARTEFACT_PATH=/tmp/deployable_artifact.tar.gz

echo "PACKAGING tar.gz for deployment"
tar -pczf $ARTEFACT_PATH ./

echo "PREPARING Heroku source for upload"
sources=`curl -sS -X POST https://api.heroku.com/apps/$HEROKU_APP_NAME/sources -H 'Accept: application/vnd.heroku+json; version=3' -H "Authorization: Bearer $HEROKU_API_KEY"`

get_url=`echo $sources | jq -r .source_blob.get_url`
put_url=`echo $sources | jq -r .source_blob.put_url`

echo "UPLOADING tar.gz file to Heroku"
curl -sS -X PUT "$put_url" -H 'Content-Type:' --data-binary @$ARTEFACT_PATH

echo "STARTING Build process on Heroku"
deployment=`curl -sS -X POST https://api.heroku.com/apps/$HEROKU_APP_NAME/builds -d "{\"source_blob\":{\"url\":\"$get_url\", \"version\": \"sfghdjhtjtjdghjdhdfghdfghfdshsggadfg\"}}" -H 'Accept: application/vnd.heroku+json; version=3' -H 'Content-Type: application/json' -H "Authorization: Bearer $HEROKU_API_KEY"`

deployment_id=`echo "$deployment" | jq -r .id`

echo "DEPLOYMENT: $deployment_id"

output_stream_url=`echo "$deployment" | jq -r .output_stream_url`

curl -sS "$output_stream_url"

# Sleep for 2 seconds to allow Heroku to store the result of the Deployment
sleep $AFTER_DEPLOYMENT_WAIT_TIME

echo "CHECKING API for deployment success"

deployment_result_json=`curl -sS https://api.heroku.com/apps/$HEROKU_APP_NAME/builds/$deployment_id -H 'Accept: application/vnd.heroku+json; version=3' -H "Authorization: Bearer $HEROKU_API_KEY"`

deployment_status=`echo "$deployment_result_json" | jq -r .status`
echo "DDEPLOYMENT STATUS: $deployment_status"

[ "$deployment_status" = "succeeded" ]

echo "DEPLOYMENT SUCCESSFUL"
